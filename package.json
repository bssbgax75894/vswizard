{	
  "publisher": "odeep-co",
  "license": "MIT",
  "name": "vswizard",
  "displayName": "vswizard",
  "description": "",
  "repository": {
		"type": "git",
		"url": "https://github.com/odeep-co/vswizard"
	},
  "version": "0.0.1",
  "icon": "assets/Logo.png",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Programming Languages",
		"Snippets",
		"Machine Learning",
    "Other"
  ],
	"activationEvents": [
		"*"
	],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vswizard.enableCodeLens",
				"title": "Enable Code Lens",
				"category": "vswizard"
      },
      {
				"command": "vswizard.disableCodeLens",
				"title": "Disable Code Lens",
				"category": "vswizard"
			},
      {
        "command": "vswizard.generateDocstring",
        "title": "Generate Documentation",
        "category": "vswizard"
      },
      {
        "command": "vswizard.generateFileHeader",
        "title": "Generate FileHeader",
        "category": "vswizard"
      },
      {
        "command": "vswizard.generateCompletion",
        "title": "Generate Completion",
        "category": "vswizard"
      }
    ],
    "configuration": [
      {
        "id": "llm-models",
        "title": "Llm Models",
        "order": 1,
        "properties": {
          "vswizard.apiUrl": {
            "type": "string",
            "default": "http://localhost:8000/v1/completions"
          }
        }
      },
      {
        "id": "code-lens",
        "title": "Code Lens",
        "order": 2,
        "properties": {
          "vswizard.codeLens.enabled": {
            "type": "boolean",
            "default": true,
            "order": 2
          }
        }
      },
      {
        "id": "code-completion",
        "title": "Code Completion",
        "order": 3,
        "properties": {
          "vswizard.codeCompletion.enabled": {
            "type": "boolean",
            "default": true,
            "order": 3
          }
        }
      },
      {
				"id": "docstring-templates",
				"title": "Docstring Configurations",
				"order": 4,
				"properties": {
					"vswizard.python.startDocstringToken": {
						"type": "string",
						"default": "'''",
						"markdownDescription": "Token to indicate the start of a Python docstring.",
						"order": 0
					},
					"vswizard.python.endDocstringToken": {
						"type": "string",
						"default": "'''",
						"markdownDescription": "Token to indicate the end of a Python docstring.",
						"order": 1
					},
					"vswizard.python.docstringTemplate": {
						"type": "integer",
						"default": 0,
						"markdownDescription": "Template for Python Docstring.",
						"enum": [
							0,
							1
						],
						"enumDescriptions": [
							"Parameters\n    ----------\n    array : list\n        The array to be sorted.\n\n    Returns\n    -------\n    list\n        The sorted array.\n\n    Examples\n    --------\n    >>> bubble_sort([3, 2, 1])\n    [1, 2, 3]",
							"Parameters:\n        array(list): The array to be sorted.\n\n    Returns:\n        list: The sorted array.\n\n    Examples: \n        >>> bubble_sort([3, 2, 1])\n        [1, 2, 3]"
						],
						"order": 2
					},
					"vswizard.javascript.startDocstringToken": {
						"type": "string",
						"default": "/**",
						"markdownDescription": "Token to indicate the start of a JavaScript docstring.",
						"order": 3
					},
					"vswizard.javascript.endDocstringToken": {
						"type": "string",
						"default": "*/",
						"markdownDescription": "Token to indicate the end of a JavaScript docstring.",
						"order": 4
					},
					"vswizard.javascript.docstringTemplate": {
						"type": "integer",
						"default": 0,
						"markdownDescription": "Template for JavaScript Docstring.",
						"enum": [
							0,
							1,
							3
						],
						"enumDescriptions": [
							"Parameters\n    ----------\n    array : list\n        The array to be sorted.\n\n    Returns\n    -------\n    list\n        The sorted array.\n\n    Examples\n    --------\n    >>> bubble_sort([3, 2, 1])\n    [1, 2, 3]",
							"Parameters:\n        array(list): The array to be sorted.\n\n    Returns:\n        list: The sorted array.\n\n    Examples: \n        >>> bubble_sort([3, 2, 1])\n        [1, 2, 3]",
							"    * @param {Array} inputArr - An array of numbers\n    * @returns {Array} - The sorted array\n    * @description - This function sorts an array of numbers using the insertion sort algorithm\n    * @example\n    * // returns [1, 2, 3]\n    * bubble_sort([3, 2, 1])"
						],
						"order": 5
					},
					"vswizard.typescript.startDocstringToken": {
						"type": "string",
						"default": "/**",
						"markdownDescription": "Token to indicate the start of a TypeScript docstring.",
						"order": 6
					},
					"vswizard.typescript.endDocstringToken": {
						"type": "string",
						"default": "*/",
						"markdownDescription": "Token to indicate the end of a TypeScript docstring.",
						"order": 7
					},
					"vswizard.typescript.docstringTemplate": {
						"type": "integer",
						"default": 0,
						"markdownDescription": "Template for TypeScript Docstring.",
						"enum": [
							0,
							1,
							3
						],
						"enumDescriptions": [
							"Parameters\n    ----------\n    array : list\n        The array to be sorted.\n\n    Returns\n    -------\n    list\n        The sorted array.\n\n    Examples\n    --------\n    >>> bubble_sort([3, 2, 1])\n    [1, 2, 3]",
							"Parameters:\n        array(list): The array to be sorted.\n\n    Returns:\n        list: The sorted array.\n\n    Examples: \n        >>> bubble_sort([3, 2, 1])\n        [1, 2, 3]",
							"    * @param {Array} inputArr - An array of numbers\n    * @returns {Array} - The sorted array\n    * @description - This function sorts an array of numbers using the insertion sort algorithm\n    * @example\n    * // returns [1, 2, 3]\n    * bubble_sort([3, 2, 1])"
						],
						"order": 8
					}
				}
			}
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "eslint": "^8.56.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.3.3",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "axios": "^1.6.2"
  }
}
